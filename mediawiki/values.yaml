## Bitnami MediaWiki image version
## ref: https://hub.docker.com/r/ubcctlt/mediawiki/tags/
##
image:
  repository: ubcctlt/mediawiki
  # tag: 

stage: dev
replicas: 1
## Specify a imagePullPolicy
## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
##
# imagePullPolicy:

## User of the application
##
adminUser: user

## Application password
## Defaults to a random 10-character alphanumeric string if not set
##
# adminPassword:

## Admin email
## ref: https://github.com/bitnami/bitnami-docker-mediawiki#environment-variables
##
mediawikiEmail: user@example.com

# mediawikiEmergencyContact: admin@example.com
# mediawikiPasswordSender: admin@example.com

## Name for the wiki
##
mediawikiName: My Wiki

mediawikiLang: en

# Top right corner logo
# mediawikiLogo:

# Comma separated extension list
mediawikiExts: ""

mainCache: "CACHE_NONE"

apiPath: /w/api.php

# mediawikiUploadPath: //example.com/images
mediawikiUploadPath: //example.com/images

# mediawikiAllowSiteCSSOnRestrictedPages: false

# allow anonymous user to edit pages
# mediawikiAllowAnonymousEdit: true

# Google Analytics Tracking Token
# googleAnalyticsUA: UA-XXXXXXXX-XX

## SMTP mail delivery configuration
## ref: https://github.com/bitnami/bitnami-docker-mediawiki#smtp-configuration
##
# smtpHost:
# smtpPort:
# smtpHostID:
# smtpUser:
# smtpPassword:

##
## MariaDB chart configuration
# ref: https://github.com/kubernetes/charts/tree/master/stable/mariadb
##
db:
  # when disabled, certain values are still being used by mediawiki container
  enabled: false
  ## DB admin password
  ##
  #mariaRootPassword
  #mariadbUser: wiki
  #mariadbPassword:
  #mariaDatabase: mediawiki
  #
  #mysqlRootPassword:
  mysqlUser: wiki
  mysqlPassword: mediawiki
  mysqlDatabase: mediawiki

  ## Enable persistence using Persistent Volume Claims
  ## ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
  ##
  persistence:
    enabled: false
    ## If defined, volume.beta.kubernetes.io/storage-class: <storageClass>
    ## Default: volume.alpha.kubernetes.io/storage-class: default
    ##
    # storageClass:
    accessMode: ReadWriteOnce
    size: 8Gi

  service:
    # uncomment name to use external service
    #name:
    port: 3306

node_services:
  enabled: true
  image:
    repository: ubcctlt/mediawiki-node-services
    # tag: 
  # imagePullPolicy:
  replicas: 1
  persistence:
    enabled: false
  resources:
    requests:
      memory: 256Mi
      cpu: 100m

ldap:
  enabled: false
  domain: CWL
  server: ldap
  port: 389
  baseDn: dc=example,dc=com
  #searchStrings: cn=USER-NAME,dc=example,dc=com
  #searchAttrs: cn
  #proxyAgent: admin
  #proxyPassword: admin
  debug: 0
  encryption: clear

memcached:
  # enable internal memcached deployment and services, set to false to 
  # use external memcached cluster
  enabled: false
  # Amount of memory allocated, for internal memcached deployment only
  memory: 64
  image:
    repository: memcached
    tag: 1.5-alpine
  # imagePullPolicy:
  replicas: 1
  resources:
    requests:
      memory: 64Mi
      cpu: 50m

service:
  name: mediawiki
  type: ClusterIP
  externalPort: 80
  internalPort: 80

## Enable persistence using Persistent Volume Claims
## ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
##
persistence:
  enabled: false
  ## If defined, volume.beta.kubernetes.io/storage-class: <storageClass>
  ## Default: volume.alpha.kubernetes.io/storage-class: default
  ##
  storageClass: ""
  accessMode: ReadWriteMany
  size: 8Gi

ingress:
  enabled: true
  # Used to create Ingress record (should used with service.type: ClusterIP).
  hosts:
    # if there are multiple host names, first one will be the primary.
    -
    #- wiki.example.local
  annotations:
    kubernetes.io/ingress.class: nginx
    kubernetes.io/tls-acme: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: 20m

## Configure resource requests and limits
## ref: http://kubernetes.io/docs/user-guide/compute-resources/
##
resources:
  requests:
    memory: 512Mi
    cpu: 300m

# LDAP settings
#ldap:
#  enabled: true
#  domain: YOUR_DOMAIN
#  server: ldap.example.com
#  port: 636
#  baseDn: "ou=users,ou=ORG,dc=example,dc=com"
#  searchAttrs: uid
#  proxyAgent: "uid=wiki,ou=Service Accounts,ou=SERVICES,dc=example,dc=com"
#  proxyPassword: "PASSWORD"
#  debug: 3
#  encryption: ssl

mediawikiFiles:
  CustomSettings.php: |-
    <?php ?>

