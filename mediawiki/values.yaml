## Bitnami MediaWiki image version
## ref: https://hub.docker.com/r/ubcctlt/mediawiki/tags/
##
image:
  repository: ubcctlt/mediawiki
  # tag:

stage: dev
replicas: 1
## Specify a imagePullPolicy
## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
##
# imagePullPolicy:

debug: false

## User of the application
##
adminUser: user

## Application password
## Defaults to a random 10-character alphanumeric string if not set
##
# adminPassword:

## Admin email
## ref: https://github.com/bitnami/bitnami-docker-mediawiki#environment-variables
##
mediawikiEmail: user@example.com

# mediawikiEmergencyContact: admin@example.com
# mediawikiPasswordSender: admin@example.com

## Name for the wiki
##
mediawikiName: My Wiki

mediawikiLang: en

# Top right corner logo
#mediawikiLogo:
#  # used by new themes (e.g. 2022's Vector theme), should be a square, ideally
#  # 50x50 pixels for SVGs, 100x100 pixels for regular images. Required.
#  icon: '/path/to/img.svg'
#  # for old themes(e.g. pre-2022's Vector legacy theme). Required if still
#  # using old themes, but might be deprecated in the future.
#  legacy1x: '/path/to/img2.svg'
#  legacy2x: '/images/d/d5/Ubcwiki_logo_2x.png'

# Comma separated extension list
mediawikiExts: ""

mainCache: "CACHE_NONE"

# cacheDirectory: false

# files, db or array
# l10nCacheStore: detect

#l10nCacheManualRecache: false

apiPath: /w/api.php
restPath: /w/rest.php

# mediawikiUploadPath: //example.com/images
mediawikiUploadPath: //example.com/images

# mediawikiAllowSiteCSSOnRestrictedPages: false

# allow anonymous user to edit pages
# mediawikiAllowAnonymousEdit: true

# Enable bot password
mediawikiEnableBotPasswords: true

googleAnalytics:
  # Google Analytics Tracking Token
  id: G-XXXXXXXX-XX
  # Google Service Account to be used for Analytics Metrics
  # metricsAllowed: '*'
  # metricsPath: /path/to/json/file
  # metricsViewID: XXXXX

googleMap:
  # Google Map API key
  apiKey: XXXXX

caliper:
  enabled: false
  host: https://caliper.imsglobal.org/caliper/PUT_TEST_BEARER_TOKEN_HERE/message
  api_key: PUT_TEST_BEARER_TOKEN_HERE
  app_base_url: http://localhost.test.com/
  ldap_actor_homepage: http://media_wiki_ldap_homepage

## SMTP mail delivery configuration
## ref: https://github.com/bitnami/bitnami-docker-mediawiki#smtp-configuration
##
# smtpHost:
# smtpPort:
# smtpHostID:
# smtpUser:
# smtpPassword:

# HorizontalPodAutoscaler
hpa:
  enabled: false
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 50
##
## MariaDB chart configuration
# ref: https://github.com/kubernetes/charts/tree/master/stable/mariadb
##
db:
  ## Whether to deploy a mariadb server to satisfy the applications database requirements. To use an external database set this to false and configure the externalDatabase parameters
  disableExternal: true
  ## standalone or replication
  architecture: standalone
  # use default image from upstream
  #image:
  #  tag: 10.2
  auth:
    #rootPassword:
    database: &dbName mediawiki
    username: &dbUser wiki
    schema:

    ## If the password is not specified, mariadb will generates a random password
    ##
    # password: &dbPass
    # replicationUser: replicator
    # replicationPassword:

  ## Enable persistence using Persistent Volume Claims
  ## ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
  ##
  master:
    persistence:
      enabled: true
      ## mariadb data Persistent Volume Storage Class
      ## If defined, storageClassName: <storageClass>
      ## If set to "-", storageClassName: "", which disables dynamic provisioning
      ## If undefined (the default) or set to null, no storageClassName spec is
      ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
      ##   GKE, AWS & OpenStack)
      ##
      # storageClass: "-"
      accessMode: ReadWriteOnce
      size: 8Gi
    config: |-
      [mysqld]
      skip-name-resolve
      explicit_defaults_for_timestamp
      basedir=/opt/bitnami/mariadb
      plugin_dir=/opt/bitnami/mariadb/plugin
      port=3306
      socket=/opt/bitnami/mariadb/tmp/mysql.sock
      tmpdir=/opt/bitnami/mariadb/tmp
      max_allowed_packet=16M
      bind-address=0.0.0.0
      pid-file=/opt/bitnami/mariadb/tmp/mysqld.pid
      log-error=/opt/bitnami/mariadb/logs/mysqld.log
      character-set-server=UTF8
      collation-server=utf8_general_ci
      expire-logs-days=90

      [client]
      port=3306
      socket=/opt/bitnami/mariadb/tmp/mysql.sock
      default-character-set=UTF8
      plugin_dir=/opt/bitnami/mariadb/plugin

      [manager]
      port=3306
      socket=/opt/bitnami/mariadb/tmp/mysql.sock
      pid-file=/opt/bitnami/mariadb/tmp/mysqld.pid

  slave:
    config: |-
      [mysqld]
      skip-name-resolve
      explicit_defaults_for_timestamp
      basedir=/opt/bitnami/mariadb
      port=3306
      socket=/opt/bitnami/mariadb/tmp/mysql.sock
      tmpdir=/opt/bitnami/mariadb/tmp
      max_allowed_packet=16M
      bind-address=0.0.0.0
      pid-file=/opt/bitnami/mariadb/tmp/mysqld.pid
      log-error=/opt/bitnami/mariadb/logs/mysqld.log
      character-set-server=UTF8
      collation-server=utf8_general_ci
      expire-logs-days=90

      [client]
      port=3306
      socket=/opt/bitnami/mariadb/tmp/mysql.sock
      default-character-set=UTF8

      [manager]
      port=3306
      socket=/opt/bitnami/mariadb/tmp/mysql.sock
      pid-file=/opt/bitnami/mariadb/tmp/mysqld.pid

  service:
    # uncomment name to use external service
    #name:
    #endpoints:
    #  - 10.0.0.1
    #  - 10.0.0.2
    port: 3306

node_services:
  enabled: true
  image:
    repository: ubcctlt/mediawiki-node-services
    # tag:
  # imagePullPolicy:
  replicas: 1
  persistence:
    enabled: false
  resources:
    requests:
      memory: 256Mi
      cpu: 100m

ldap:
  enabled: false
  domain: CWL
  server: ldap
  port: 389
  baseDn: dc=example,dc=com
  userBaseDn: dc=example,dc=com
  #searchStrings: cn=USER-NAME,dc=example,dc=com
  #searchAttrs: cn
  #proxyAgent: admin
  #proxyPassword: admin
  encryption: clear
  usernameAttr: cn
  realnameAttr: displayname
  emailAttr: mail
  ubcAuthEnabled: false
  autoCreatedUserRedirect: Main_Page

parsoid:
  skipDomainCheck: true

memcached:
  # enable internal memcached deployment and services, set to false to
  # use external memcached cluster
  enabled: false
  # Amount of memory allocated, for internal memcached deployment only
  memory: 64
  image:
    repository: memcached
    tag: 1.5-alpine
  # imagePullPolicy:
  replicas: 1
  resources:
    requests:
      memory: 64Mi
      cpu: 50m
  # memcached exporter for Prometheus
  exporter:
    enabled: false
    image:
      repository: quay.io/prometheus/memcached-exporter
      tag: latest
    # imagePullPolicy:
    resources:
      requests:
        memory: 16Mi
        cpu: 20m

redis:
  enabled: false
  #host:
  port: 6379
  #password:
  persistent: true

service:
  name: mediawiki
  type: ClusterIP
  externalPort: 80
  internalPort: 80

## Enable persistence using Persistent Volume Claims
## ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
##
persistence:
  enabled: false
  ## If defined, volume.beta.kubernetes.io/storage-class: <storageClass>
  ## Default: volume.alpha.kubernetes.io/storage-class: default
  ##
  storageClass: ""
  accessMode: ReadWriteMany
  size: 8Gi

ingress:
  enabled: true
  # Used to create Ingress record (should used with service.type: ClusterIP).
  hosts:
    # if there are multiple host names, first one will be the primary.
    -
    #- wiki.example.local
  annotations:
    kubernetes.io/ingress.class: nginx
    kubernetes.io/tls-acme: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: 20m

## Configure resource requests and limits
## ref: http://kubernetes.io/docs/user-guide/compute-resources/
##
resources:
  requests:
    memory: 512Mi
    cpu: 300m

# LDAP settings
#ldap:
#  enabled: true
#  domain: YOUR_DOMAIN
#  server: ldap.example.com
#  port: 636
#  baseDn: "ou=users,ou=ORG,dc=example,dc=com"
#  searchAttrs: uid
#  proxyAgent: "uid=wiki,ou=Service Accounts,ou=SERVICES,dc=example,dc=com"
#  proxyPassword: "PASSWORD"
#  debug: 3
#  encryption: ssl

jobrunner:
  enabled: false
  resources:
    requests:
      cpu: "50m"
      memory: "150Mi"

mediawikiFiles:
  CustomSettings.php: |-
    <?php ?>

