apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "mediawiki.fullname" . }}
  labels:
    {{- include "common_labels" . | indent 4 }}
    tier: app
spec:
  replicas: {{ .Values.replicas }}
  template:
    metadata:
      labels:
        app: {{ template "mediawiki.fullname" . }}
    spec:
      containers:
      - name: {{ template "mediawiki.fullname" . }}
      {{- include "mediawiki.app.spec" . | indent 8 }}
        resources:
{{ toYaml .Values.resources | indent 10 }}
        ports:
        - name: http
          containerPort: 80
        livenessProbe:
          httpGet:
            path: /index.php/Main_Page
            port: http
          initialDelaySeconds: 30
          timeoutSeconds: 2
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /index.php/Main_Page
            port: http
          initialDelaySeconds: 30
          timeoutSeconds: 2
          periodSeconds: 20
      volumes:
      {{- include "mediawiki.app.mounts" . | indent 6 }}

{{- if .Values.node_services.enabled }}
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "mediawiki.fullname" . }}-node-services
  labels:
    {{- include "common_labels" . | indent 4 }}
    tier: services
spec:
  replicas: {{ .Values.node_services.replicas }}
  template:
    metadata:
      labels:
        app: {{ template "mediawiki.fullname" . }}-node-services
    spec:
      containers:
      - name: {{ template "mediawiki.fullname" . }}-node-services
        image: '{{ .Values.node_services.image.repository }}:{{ .Values.node_services.image.tag | default "latest" }}'
        imagePullPolicy: {{ default "" .Values.node_services.imagePullPolicy | quote }}
        env:
        - name: MEDIAWIKI_API_URL
          value: http://{{ template "mediawiki.fullname" . }}{{ .Values.apiPath }}
        ports:
        - name: parsoid
          containerPort: 8142
        - name: restbase
          containerPort: 7231
        livenessProbe:
          httpGet:
            path: /
            port: parsoid
          initialDelaySeconds: 30
        readinessProbe:
          httpGet:
            path: /
            port: parsoid
          initialDelaySeconds: 15
        resources:
{{ toYaml .Values.node_services.resources | indent 10 }}
        volumeMounts:
        - name: node-services-data
          mountPath: /data
      volumes:
      - name: node-services-data
      {{- if .Values.node_services.persistence.enabled }}
        persistentVolumeClaim:
          claimName: {{ template "mediawiki.fullname" . }}-services-pvc
      {{- else }}
        emptyDir: {}
      {{- end }}
{{- end -}}


{{- if .Values.memcached.enabled }}
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "mediawiki.fullname" . }}-memcached
  labels:
    {{- include "common_labels" . | indent 4 }}
    tier: cache
spec:
  replicas: {{ .Values.memcached.replicas }}
  template:
    metadata:
      labels:
        app: {{ template "mediawiki.fullname" . }}-memcached
    spec:
      containers:
      - name: {{ template "mediawiki.fullname" . }}-memcached
        image: '{{ .Values.memcached.image.repository }}:{{ .Values.memcached.image.tag | default "latest" }}'
        imagePullPolicy: {{ default "" .Values.memcached.imagePullPolicy | quote }}
        args: ["-m", "{{ .Values.memcached.memory }}"]
        ports:
        - name: memcached
          containerPort: 11211
        livenessProbe:
          tcpSocket:
            port: 11211
        readinessProbe:
          tcpSocket:
            port: 11211
        resources:
{{ toYaml .Values.memcached.resources | indent 10 }}
{{- end -}}

{{- if .Values.jobrunner.enabled }}
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "mediawiki.fullname" . }}-jobrunner
  labels:
    {{- include "common_labels" . | indent 4 }}
    tier: jobrunner
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: {{ template "mediawiki.fullname" . }}-jobrunner
    spec:
      containers:
      - name: {{ template "mediawiki.fullname" . }}-jobrunner
      {{- include "mediawiki.app.spec" . | indent 8 }}
        args: ["php", "/var/www/html/maintenance/runJobs.php", "--wait"]
        resources:
{{ toYaml .Values.jobrunner.resources | indent 10 }}
      volumes:
      {{- include "mediawiki.app.mounts" . | indent 6 }}
{{- end }}
