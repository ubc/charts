apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}-app
  labels:
    app: {{ template "fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
    {{- if .Values.CI_PIPELINE_ID }}
    autodeployed: "true"
    pipeline_id: "{{  .Values.CI_PIPELINE_ID }}"
    {{- end }}
    {{- if .Values.CI_JOB_ID }}
    build_id: "{{ .Values.CI_JOB_ID }}"
    {{- end }}
spec:
  replicas: {{ .Values.app.replicaCount }}
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: {{ template "fullname" . }}
      stage: {{ .Values.stage }}
      tier: app
  template:
    metadata:
      annotations:
        timestamp: {{ now | quote }}
      labels:
        app: {{ template "fullname" . }}
        stage: {{ .Values.stage }}
        tier: app
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.app.image.repository }}:{{ .Values.app.image.tag }}"
        imagePullPolicy: {{ .Values.app.image.pullPolicy }}
        env:
        - name: DB_HOST
          value: "{{ template "fullname" . }}-db"
        - name: DB_PORT
          value: {{ .Values.dbPort | quote }}
        - name: DB_USERNAME
          value: {{ .Values.dbUsername | quote }}
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ template "fullname" . }}
              key: mysql_password
        - name: DB_NAME
          value: {{ .Values.dbName }}
        - name: APP_LOGIN_ENABLED
          value: {{ .Values.appLoginEnabled | quote }}
        - name: CAS_LOGIN_ENABLED
          value: {{ .Values.casLoginEnabled | quote }}
        - name: CAS_SERVER
          value: {{ .Values.casServer }}
        - name: CAS_SERVICE_VALIDATE_URL
          value: {{ .Values.casServiceValidateUrl }}
        - name: SIDEKIQ_REDIS_URL
          value: "redis://{{ template "fullname" . }}-redis:{{ .Values.redis.service.port }}"
        - name: RAILS_ENV
          value: production
        - name: SECRET
          valueFrom:
            secretKeyRef:
              name: {{ template "fullname" . }}
              key: rails_secret
        - name: XAPI_ENABLED
          value: {{ .Values.xapi.enabled | quote }}
        {{- if .Values.xapi.enabled }}
        - name: XAPI_APP_BASE_URL
          value: {{ .Values.xapi.appBaseURL | quote }}
        - name: LRS_STATEMENT_ENDPOINT
          value: {{ .Values.xapi.lrsStatementEndpoint | quote }}
        - name: LRS_USERNAME
          value: {{ .Values.xapi.lrsUsername | quote }}
        {{- if .Values.xapi.lrsPassword }}
        - name: LRS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ template "fullname" . }}
              key: lrs_password
        {{- end }}
        - name: LRS_ACTOR_ACCOUNT_USE_CAS
          value: {{ .Values.xapi.lrsActorAccountUseCas | quote }}
        - name: LRS_ACTOR_ACCOUNT_CAS_IDENTIFIER
          value: {{ .Values.xapi.lrsActorAccountCasIdentifier | quote }}
        - name: LRS_ACTOR_ACCOUNT_CAS_HOMEPAGE
          value: {{ .Values.xapi.lrsActorAccountCasHomepage | quote }}
        {{- end }}
        - name: GA_TRACKING_ID
          value: {{ .Values.gaTrackingId | quote }}
        - name: IFRAME_ENABLED
          value: {{ .Values.iframe.enabled | quote }}
        {{- if .Values.iframe.enabled }}
        - name: IFRAME_ORIGIN
          value: {{ .Values.iframe.origin | quote }}
        {{- end }}
        ports:
        - containerPort: {{ .Values.app.service.internalPort }}
        livenessProbe:
          httpGet:
            path: /
            port: {{ .Values.app.service.internalPort }}
        readinessProbe:
          httpGet:
            path: /
            port: {{ .Values.app.service.internalPort }}
        resources:
{{ toYaml .Values.app.resources | indent 10 }}
      {{- if .Values.app.persistence.enabled }}
        volumeMounts:
        - name: {{ template "fullname" . }}-persistent-storage
          mountPath: /src/public/system
      volumes:
      - name: {{ template "fullname" . }}-persistent-storage
        persistentVolumeClaim:
          claimName: {{ template "fullname" . }}-app-pvc
      {{- end }}
      initContainers:
      - name: wait-for-db-service
        image: busybox
        command: ["sh", "-c", "until nslookup {{ template "fullname" . }}-db; do echo waiting for {{ template "fullname" . }}-db; sleep 2; done;"]
        imagePullPolicy: {{ .Values.app.image.pullPolicy }}

---

apiVersion: v1
kind: Service
metadata:
  name: {{ template "fullname" . }}-app
  labels:
    app: {{ template "fullname" . }}
    stage: {{ .Values.stage }}
    tier: app
    {{- if .Values.CI_PIPELINE_ID }}
    autodeployed: "true"
    pipeline_id: "{{  .Values.CI_PIPELINE_ID }}"
    {{- end }}
    {{- if .Values.CI_JOB_ID }}
    build_id: "{{ .Values.CI_JOB_ID }}"
    {{- end }}
spec:
  type: {{ .Values.app.service.type }}
  ports:
    - port: {{ .Values.app.service.externalPort }}
      targetPort: {{ .Values.app.service.internalPort }}
  selector:
    app: {{ template "fullname" . }}
    stage: {{ .Values.stage }}
    tier: app

{{- if .Values.app.ingress.enabled }}
---

apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: {{ template "fullname" . }}
  annotations:
    kubernetes.io/tls-acme: "true"
    kubernetes.io/ingress.class: {{ .Values.app.ingress.class }}
    {{- if and (eq .Values.app.ingress.class "nginx") (.Values.app.ingress.nginx.configuration) }}
    nginx.ingress.kubernetes.io/configuration-snippet: {{ .Values.app.ingress.nginx.configuration | quote }}
    {{- end }}
  labels:
    app: {{ template "fullname" . }}
    stage: {{ .Values.stage }}
    tier: app
    {{- if .Values.CI_PIPELINE_ID }}
    autodeployed: "true"
    pipeline_id: "{{  .Values.CI_PIPELINE_ID }}"
    {{- end }}
    {{- if .Values.CI_JOB_ID }}
    build_id: "{{ .Values.CI_JOB_ID }}"
    {{- end }}
spec:
  tls:
  - hosts:
    {{- if .Values.app.ingress.host }}
    - {{ .Values.app.ingress.host }}
    {{- end }}
    {{ $ingress :=  or (.Values.app.ingress.host) "" }}
    {{ $hostname := or (include "hostname" .) "" }}
    {{- if ne $hostname $ingress }}
    - {{ $hostname }}
    {{- end }}
    secretName: {{ .Values.app.ingress.host | default $hostname | replace "." "-" }}-tls
  rules:
  {{- if .Values.app.ingress.host }}
  - host: {{ .Values.app.ingress.host }}
    http:
      paths:
      - path: /
        backend:
          serviceName: {{ template "fullname" . }}-app
          servicePort: {{ .Values.app.service.externalPort }}
  {{- end }}
  {{- if ne $hostname $ingress }}
  - host: {{ $hostname }}
    http:
      paths:
      - path: /
        backend:
          serviceName: {{ template "fullname" . }}-app
          servicePort: {{ .Values.app.service.externalPort }}
  {{- end }}
{{ end }}
