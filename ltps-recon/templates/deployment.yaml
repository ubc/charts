apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}
  labels:
    app: {{ template "name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "name" . }}
        release: {{ .Release.Name }}
    spec:
      {{- if .Values.image.pullSecret }}
      imagePullSecrets:
        - name: {{ .Values.image.pullSecret }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args: [
            "--logging.level.ca.ubc={{ .Values.logging.level }}",
            "--logging.level.edu.ksu.canvas.net={{ .Values.logging.rest}}",
            "--canvas.url={{ .Values.canvas.url }}",
            "--canvas.token={{ .Values.canvas.token }}",
            "--canvas.timeout.connect={{ .Values.canvas.timeout.connect }}",
            "--canvas.timeout.read={{ .Values.canvas.timeout.read }}",
            "--server.ssl.enabled={{ .Values.server.ssl.enabled }}",
            {{- if .Values.server.useForwardHeaders }}
            "--server.use-forward-headers={{ .Values.server.useForwardHeaders }}",
            {{- end }}
            {{- if .Values.server.tomcat }}
            {{- if .Values.server.tomcat.remoteIpHeader }}
            "--server.tomcat.remote-ip-header={{ .Values.server.tomcat.remoteIpHeader }}",
            {{- end }}
            {{- end }}
            "--ltps.v2.url={{ .Values.ltps.v2.url }}",
            "--ltps.v2.username={{ .Values.ltps.v2.username }}",
            "--ltps.v2.password={{ .Values.ltps.v2.password }}",
            "--recon.username={{ .Values.recon.username }}",
            "--recon.password={{ .Values.recon.password }}",
            "--recon.validation.abortOnMissingPUIDs={{ .Values.recon.validation.abortOnMissingPUIDs }}",
            "--recon.validation.abortOnMissingEnrollmentsAnySection={{ .Values.recon.validation.abortOnMissingEnrollmentsAnySection }}",
            "--recon.validation.abortOnMissingEnrollmentsAllSections={{ .Values.recon.validation.abortOnMissingEnrollmentsAllSections }}",
            "--recon.gradebook.bulk={{ .Values.recon.gradebook.bulk }}",
            "--management.endpoints.web.exposure.include={{ .Values.management.endpoints.web.exposure.include }}",
            {{- if and .Values.devmode.enabled .Values.devmode.puid }}
            "--devMode.puid={{ .Values.devmode.puid }}"
            {{- end }}
          ]
          ports:
            - containerPort: {{ .Values.service.internalPort }}
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: {{ .Values.service.internalPort }}
            initialDelaySeconds: 10
            timeoutSeconds: 10
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: {{ .Values.service.internalPort }}
            initialDelaySeconds: 10
            timeoutSeconds: 10
          resources:
{{ toYaml .Values.resources | indent 12 }}
          volumeMounts:
          {{- if .Values.persistence.enabled }}
          - name: {{ template "fullname" . }}-persistent-storage
            mountPath: /data
          {{- end }}
          - name: {{ template "fullname" . }}-config
            mountPath: /config
      volumes:
      {{- if .Values.persistence.enabled }}
      - name: {{ template "fullname" . }}-persistent-storage
        persistentVolumeClaim:
          claimName: {{ template "fullname" . }}
      {{- end }}
      - name: {{ template "fullname" . }}-config
        configMap:
          name: {{ template "fullname" . }}
      {{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
      {{- end }}
