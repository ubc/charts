# Default values for webwork.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1
stage: dev

image:
  repository: lthub/webwork
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""
imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""
rootUrl: http://localhost
timezone: America/Vancouver
systemTimezone: America/Vancouver
rHost: ""
smtp:
  server: localhost
  sender: no-reply@example.com
ltiClient:
- client_id: example_client_id
  user_identifier_field: https://purl.imsglobal.org/spec/lti/claim/custom|ubc_puid
  user_student_number_field: https://purl.imsglobal.org/spec/lti/claim/custom|ubc_student_number
  platform_id: https://example_platform_id.com
  oauth2_access_token_url: https://example_platform_id.com/login/oauth2/token
  oidc_auth_url: https://example_platform_id.com/api/lti/authorize_redirect
  platform_security_jwks_url: https://example_platform_id.com/api/lti/security/jwks
  tool_public_key: |
    -----BEGIN PUBLIC KEY-----
    ...
    -----END PUBLIC KEY-----
  tool_private_key: |
    -----BEGIN RSA PRIVATE KEY-----
    ...
    -----END RSA PRIVATE KEY-----

## Enable persistence using Persistent Volume Claims
## ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
##
coursePersistence:
  enabled: false
  ## If defined, volume.beta.kubernetes.io/storage-class: <storageClass>
  ## Default: volume.alpha.kubernetes.io/storage-class: default
  ##
  annotations: {}
  #   nfs.io/storage-path: "testpath"
  storageClass: ""
  accessMode: ReadWriteMany
  size: 8Gi

libraryPersistence:
  enabled: false
  ## If defined, volume.beta.kubernetes.io/storage-class: <storageClass>
  ## Default: volume.alpha.kubernetes.io/storage-class: default
  ##
  annotations: {}
  storageClass: ""
  accessMode: ReadWriteMany
  size: 8Gi

htdocsTmpPersistence:
  enabled: false
  ## If defined, volume.beta.kubernetes.io/storage-class: <storageClass>
  ## Default: volume.alpha.kubernetes.io/storage-class: default
  ##
  annotations: {}
  storageClass: ""
  accessMode: ReadWriteMany
  size: 8Gi

htdocsDataPersistence:
  enabled: false
  ## If defined, volume.beta.kubernetes.io/storage-class: <storageClass>
  ## Default: volume.alpha.kubernetes.io/storage-class: default
  ##
  annotations: {}
  storageClass: ""
  accessMode: ReadWriteMany
  size: 8Gi

logsPersistence:
  enabled: false
  ## If defined, volume.beta.kubernetes.io/storage-class: <storageClass>
  ## Default: volume.alpha.kubernetes.io/storage-class: default
  ##
  annotations: {}
  storageClass: ""
  accessMode: ReadWriteMany
  size: 8Gi

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80
  externalPort: 80
  # uncomment to enable hostPort on deployment
  # hostPort: 80
  # uncomment to specify a nodePort
  # nodePort: 30000

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: ["/"]
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}


##
## MariaDB chart configuration
# ref: https://github.com/kubernetes/charts/tree/master/stable/mariadb
##
db:
  ## Whether to deploy a mariadb server to satisfy the applications database requirements. To use an external database set this to false and configure the externalDatabase parameters
  disableExternal: false
  ## standalone or replication
  architecture: standalone
  # use default image from upstream
  #image:
  #  tag: 10.2
  ## Create a database and a database user
  ## ref: https://github.com/bitnami/bitnami-docker-mariadb/blob/master/README.md#creating-a-database-user-on-first-run
  ##
  db:
    type: mariadb
    driver: MariaDB

  auth:
    username: &dbUser webwork
    database: &dbName webwork
    #prefix:

    ## If the password is not specified, mariadb will generates a random password
    ##
    password: &dbPass randompassword

    ## MariaDB admin password
    ## ref: https://github.com/bitnami/bitnami-docker-mariadb/blob/master/README.md#setting-the-root-password-on-first-run
    ##
    rootPassword: 'rootpassword'
    replicationPassword: 'replicationpassword'

  ## Enable persistence using Persistent Volume Claims
  ## ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
  ##
  primary:
    persistence:
      enabled: true
      ## mariadb data Persistent Volume Storage Class
      ## If defined, storageClassName: <storageClass>
      ## If set to "-", storageClassName: "", which disables dynamic provisioning
      ## If undefined (the default) or set to null, no storageClassName spec is
      ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
      ##   GKE, AWS & OpenStack)
      ##
      # storageClass: "-"
      accessMode: ReadWriteOnce
      size: 8Gi
    configuration: |-
      [mysqld]
      skip-name-resolve
      explicit_defaults_for_timestamp
      basedir=/opt/bitnami/mariadb
      plugin_dir=/opt/bitnami/mariadb/plugin
      port=3306
      socket=/opt/bitnami/mariadb/tmp/mysql.sock
      tmpdir=/opt/bitnami/mariadb/tmp
      max_allowed_packet=16M
      bind-address=::
      pid-file=/opt/bitnami/mariadb/tmp/mysqld.pid
      log-error=/opt/bitnami/mariadb/logs/mysqld.log
      character-set-server=UTF8
      collation-server=utf8_general_ci
      expire-logs-days=10

      [client]
      port=3306
      socket=/opt/bitnami/mariadb/tmp/mysql.sock
      default-character-set=UTF8
      plugin_dir=/opt/bitnami/mariadb/plugin

      [manager]
      port=3306
      socket=/opt/bitnami/mariadb/tmp/mysql.sock
      pid-file=/opt/bitnami/mariadb/tmp/mysqld.pid

  secondary:
    configuration: |-
      [mysqld]
      skip-name-resolve
      explicit_defaults_for_timestamp
      basedir=/opt/bitnami/mariadb
      port=3306
      socket=/opt/bitnami/mariadb/tmp/mysql.sock
      tmpdir=/opt/bitnami/mariadb/tmp
      max_allowed_packet=16M
      bind-address=::
      pid-file=/opt/bitnami/mariadb/tmp/mysqld.pid
      log-error=/opt/bitnami/mariadb/logs/mysqld.log
      character-set-server=UTF8
      collation-server=utf8_general_ci
      expire-logs-days=10

      [client]
      port=3306
      socket=/opt/bitnami/mariadb/tmp/mysql.sock
      default-character-set=UTF8

      [manager]
      port=3306
      socket=/opt/bitnami/mariadb/tmp/mysql.sock
      pid-file=/opt/bitnami/mariadb/tmp/mysqld.pid

  service:
    # uncomment name to use external service
    #name:
    #endpoints:
    #  - 10.0.0.1
    #  - 10.0.0.2
    port: 3306


shibd:
  enabled: false
  image:
    repository: lthub/shibd
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: latest
  imagePullSecrets: []
  replicas: 1
  idp:
    discovery_url: https://example.com
    metadata_url: https://example.com/idp/shibboleth
    entity_id: https://example.com
    attribute_map_url: https://example.com/attribute-map.xml
#   attributeMap: |
#     <Attributes xmlns="urn:mace:shibboleth:2.0:attribute-map" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
#     </Attributes>
  sp:
    entity_id: https://sp.example.com
    # key:
    # cert:
  odbc:
    driver:        MySQL
    lib:           odbc-store.so
    port:          3306
    database:      *dbName
    user:          *dbUser
    password:      *dbPass
  service:
    port:             1600
  listener_acl:       0.0.0.0/0
  listener_address:   0.0.0.0
  log_level: INFO
  resources:
    requests:
      memory: 64Mi
      cpu: 50m
  # TODO: Add vars to deployment

# webworkFiles:
#   localOverride.conf: |

# caliper TODO: Add to deployment
caliper:
  enabled: false
  base_url: https://webworkdev.example.com/webwork2/
  host: https://caliper.endpoint.com
  api_key: xxxxxxx

r:
  enabled: true
  #externalHost: r.example.com
  image:
    repository: ubcctlt/rserve
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: latest
  imagePullSecrets: []
  replicas: 1
  service:
    port: 6311

worker:
  lti1p3:
    enabled: true
    replicaCount: 1
    nodeSelector: {}
    tolerations: []
    affinity: {}
    resources: {}
  mojo:
    enabled: true
    replicaCount: 1
    nodeSelector: {}
    tolerations: []
    affinity: {}
    resources: {}

cronjob:
  lti_update_classlist:
    enabled: true
    schedule: "0 11 * * *"
    #startingDeadlineSeconds:
    restartPolicy: Never
  lti_update_grades:
    enabled: true
    schedule: "0 13 * * *"
    #startingDeadlineSeconds:
    restartPolicy: Never
